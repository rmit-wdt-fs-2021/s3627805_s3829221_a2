@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@using InternetBankingWebApp.ViewModels;
@model MyStatementViewModel

@{
    MyStatementViewModel myStatement = Model;
    ViewData["Title"] = "My Statement";
    var transactionList = Model.PagedList;
}


<h1>MyStatement</h1>

<div>
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(x => transactionList[0].TransactionID)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].TransactionType)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].AccountNumber)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].DestAccountNumber)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].Amount)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].Comment)</th>
            <th>@Html.DisplayNameFor(x => transactionList[0].ModifyDate)</th>
        </tr>
        @foreach (var transaction in transactionList)
        {
            <tr>
                @{
                    <td>@Html.DisplayFor(x => transaction.TransactionID)</td>
                    <td>@Html.DisplayFor(x => transaction.TransactionType)</td>
                    <td>@Html.DisplayFor(x => transaction.AccountNumber)</td>
                    <td>@Html.DisplayFor(x => transaction.DestAccountNumber)</td>
                    <td>@Html.DisplayFor(x => transaction.Amount)</td>
                    <td>@Html.DisplayFor(x => transaction.Comment)</td>
                    DateTime date = transaction.ModifyDate.ToLocalTime();
                    <td>@Html.DisplayFor(x => date)</td>
                }

            </tr>
        }

    </table>

    @Html.PagedListPager(transactionList, page => Url.Action("MyStatement", new { page }),
        new PagedListRenderOptions
            {
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        })
</div>

<div>
    <a asp-action="Index">Back to Dashboard</a>
</div>

